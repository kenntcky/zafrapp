rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow any authenticated user to read/list to prevent UI bugs.
      allow get, list: if request.auth != null;

      // A user can UPDATE their own document.
      allow update: if request.auth.uid == userId;

      // Any authenticated user can CREATE a user document (for registration).
      allow create: if request.auth != null;
    }

    // Rules for the 'transactionReports' collection
    match /transactionReports/{reportId} {
      // ONLY 'umkm-amil' can create transactions.
      allow create: if request.auth != null 
                    && exists(/databases/$(database)/documents/users/$(request.auth.uid))
                    && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'umkm-amil';
      
      // Any authenticated user can read reports.
      allow read: if request.auth != null;
      
      // HR-Keuangan can delete reports.
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'hr-keuangan';

      // Allow updates based on role.
      allow update: if
        // HR-Keuangan can update any field.
        (request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'hr-keuangan') ||
        // UMKM-Amil can update specific verification fields on their own transactions.
        (request.auth != null &&
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'umkm-amil' &&
         request.auth.uid == resource.data.userId &&
         request.resource.data.diff(resource.data).affectedKeys().hasOnly(['shariaStatus', 'aiStatus', 'aiExplanation']));
    }
  }
}
